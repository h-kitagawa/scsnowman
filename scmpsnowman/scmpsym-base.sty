\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{scmpsym-base}[2018-12-02 Base for emoji variants using MetaPost]
%
% prepare for options
\newif\ifsctkzsym@document
\newif\ifsctkzsym@qed
\newif\ifsctkzsym@item
%
% options
\DeclareOption{documentX}{\sctkzsym@documenttrue}
\DeclareOption{nodocumentX}{\sctkzsym@documentfalse}
\DeclareOption{qedX}{\sctkzsym@qedtrue}
\DeclareOption{noqedX}{\sctkzsym@qedfalse}
\DeclareOption{itemX}{\sctkzsym@itemtrue}
\DeclareOption{noitemX}{\sctkzsym@itemfalse}
\ExecuteOptions{documentX,qedX,itemX}
\ProcessOptions\relax

\ifdefined\directlua
  \RequirePackage{luamplib}
  \def\scmp@env@begin{\begin{mplibcode}}
  \long\def\scmp@env#1\scmp@env@end{%
    \bgroup\everymplib{beginfig(0);}\everyendmplib{endfig;}%
    \edef\scmp@env@body{#1}%
    \expandafter\scmp@env@begin\scmp@env@body
    \end{mplibcode}\egroup
  }
  \def\scmpifyoko#1{%
    \unless\ifdefined\ltjgetparameter#1\else\unless
	\ifnum\ltjgetparameter{direction}=3\relax#1\fi\fi
  }
  \csletcs{iftdir}{iffalse}
\else
  \unless\ifdefined\tate\csletcs{iftdir}{iffalse}\fi
  \RequirePackage{gmp}
  \long\def\scmp@env#1\scmp@env@end{\bgroup%
	\let\mpcolor\relax\edef\scmp@env@body{#1}%
    \expandafter\scmp@env@mpcolor\scmp@env@body\@nil\@nil\@nil
	\def\mpcolor##1{\csname mpxcolor@##1\endcsname}%
	\begin{mpost}\scmp@env@body\end{mpost}%
  \egroup}
  \ifdefined\pdfoutput %% pdfTeX
    %% support only g, k, rg
    \let\@@\relax
    \def\scmp@color@to@ps#1#2\@@{%
	  \ifcat#1a%
	    \ifnum`#1=`g \space setgray\fi
	    \ifnum`#1=`k \space setcmykcolor\fi
	    \ifnum`#1=`r \space setrgbcolor\fi
	  \expandafter\scmp@color@to@ps@gobble
	  \else\string#1\space\expandafter\scmp@color@to@ps\fi#2\@@
	}
    \def\scmp@color@to@ps@gobble#1\@@{}
    \let\@@\undefined
  \else
    \let\scmp@color@to@ps=\c@lor@to@ps
  \fi
  \def\mplibcolor#1{%
	\def\set@color{\edef#1{%
	  \ifdefined\directlua1\fi
	  withprescript "\expandafter\scmp@color@to@ps\current@color\@@"}}%
	\color
  }
  \let\mpcolor\relax
  \def\scmp@env@mpcolor@a#1#2\@nil{\scmp@env@mpcolor#2\@nil}
  \def\scmp@env@mpcolor#1#2#3\@nil{%
    \ifx#1\@nil\let\next=\@gobbletwo
	\else\ifx#1\mpcolor
      \expandafter\mplibcolor\csname mpxcolor@#2\endcsname{#2}%
	  \let\next=\scmp@env@mpcolor@a
    \else\let\next=\scmp@env@mpcolor\fi\fi
    \next{#2}#3\@nil
  }
  \def\scmpifyoko#1{%
    \ifdefined\tate\unless\iftdir#1\fi\else#1\fi
  }
\fi
\RequirePackage{keyval}
%
\ifdefined\kanjiskip
  \IfFileExists{pxeveryshi.sty}{\RequirePackage{pxeveryshi}}{}
\fi
%
% save QED symbol before change (joke)
\ifsctkzsym@qed
  \def\sctkzsym@saving@qedsymbol{%
    \ifx\qedsymbol\@undefined\else
      \let\sctkzsym@saved@qedsymbol\qedsymbol
    \fi
  }
  % if `amsthm' is already loaded, save it now
  \sctkzsym@saving@qedsymbol
  % otherwise, saving is delayed till \begin{document}
  % (hope \makeqed... is not already executed...)
  \ifx\sctkzsym@saved@qedsymbol\@undefined
    \AtBeginDocument{\sctkzsym@saving@qedsymbol}
  \fi
  \newcommand{\makeqedother}{%
    \let\qedsymbol\sctkzsym@saved@qedsymbol
  }
\fi
%
% save item label before change (joke)
\ifsctkzsym@item
  \let\sctkzsym@saved@labelitemi\labelitemi
  \let\sctkzsym@saved@labelitemii\labelitemii
  \let\sctkzsym@saved@labelitemiii\labelitemiii
  \let\sctkzsym@saved@labelitemiv\labelitemiv
  \newcommand{\makeitemother}{%
    \let\labelitemi\sctkzsym@saved@labelitemi
    \let\labelitemii\sctkzsym@saved@labelitemii
    \let\labelitemiii\sctkzsym@saved@labelitemiii
    \let\labelitemiv\sctkzsym@saved@labelitemiv
  }
\fi
%
% key definitions
%  * any value; if none, 'true' is assumed
\newcommand{\sctkzsym@define@key@withbool}[2]{%
  \define@key{sctkzsym@#1}{#2}[true]{\expandafter\def\csname sctkzsym@#1@#2\endcsname{##1}}%
  \expandafter\newif\csname ifsctkzsym@#1@#2\endcsname
}
%  * any value; if none, an error will be raised
\newcommand{\sctkzsym@define@key@wodefault}[2]{%
  \define@key{sctkzsym@#1}{#2}{\expandafter\def\csname sctkzsym@#1@#2\endcsname{##1}}%
}
%  * one from arg #3; arg #3 should be comma-separated list of candidates
\newcommand{\sctkzsym@define@key@withword}[3]{%
  \define@key{sctkzsym@#1}{#2}{\expandafter\def\csname sctkzsym@#1@#2\endcsname{##1}}%
  % register known values (used in key handling)
  \sctkzsym@hndlcnt\z@
  \edef\@tempa{\zap@space#3 \@empty}%
  \@for\@tempa:=\@tempa\do{%
    \advance\sctkzsym@hndlcnt\@ne
    \expandafter\let\csname sctkzsym@#1@#2@\romannumeral\sctkzsym@hndlcnt\endcsname\@tempa}%
}
% other known values (used in key handling)
\def\sctkzsym@true{true}   % for bool strcmp
\def\sctkzsym@false{false} % for bool strcmp
%
% key handling
\newcount\sctkzsym@hndlcnt % for withword loop
\let\sctkzsym@status\relax % for withword status
\newcommand{\sctkzsym@hndl@key@withbool}[2]{%
  \expandafter\ifx\csname sctkzsym@#1@#2\endcsname\sctkzsym@false\relax
    \csname sctkzsym@#1@#2false\endcsname % <key>=false
  \else
    \csname sctkzsym@#1@#2true\endcsname  % <key>=true/<color>
    \expandafter\ifx\csname sctkzsym@#1@#2\endcsname\sctkzsym@true\relax
      % <key>=true; <default-color>
      \expandafter\def\csname sctkzsym@#1@#2\endcsname{\sctkzsym@defaultcolor}%
    \fi
  \fi
}
\newcommand{\sctkzsym@hndl@key@onlybool}[2]{%
  \expandafter\ifx\csname sctkzsym@#1@#2\endcsname\sctkzsym@false\relax
    \csname sctkzsym@#1@#2false\endcsname % <key>=false
  \else
    \expandafter\ifx\csname sctkzsym@#1@#2\endcsname\sctkzsym@true\relax
      \csname sctkzsym@#1@#2true\endcsname  % <key>=true
    \else
      \PackageError{sc#1}{Only true/false allowed for key `#2'}\@ehc
      \csname sctkzsym@#1@#2false\endcsname % <key>=false
    \fi
  \fi
}
\newcommand{\sctkzsym@hndl@key@withword}[2]{%
  % initialize
  \@tempcnta\@ne
  \let\sctkzsym@status\relax
  % check through the registered candidate values
  \loop\expandafter\ifx\csname sctkzsym@#1@#2@\romannumeral\@tempcnta\endcsname\relax\else
    \ifx\sctkzsym@status\relax
      \expandafter\ifx\csname sctkzsym@#1@#2\expandafter\endcsname
        \csname sctkzsym@#1@#2@\romannumeral\@tempcnta\endcsname\relax
          \def\sctkzsym@status{0}%
      \fi
    \fi
    \advance\@tempcnta\@ne
  \repeat
  % if the status is still not zero, user-specified value is invalid; throw an error
  \ifx\sctkzsym@status\relax
    \PackageError{sc#1}{Unsupported value `\csname sctkzsym@#1@#2\endcsname' for #2}\@ehc
  \fi
}
%
% setup for tikzpicture
\newlength{\sctkzsym@coord@baseline}
\newcommand{\sctkzsym@beginyokobox}{\hbox to\scmp@unit\bgroup\ifdefined\tate\yoko\fi\hss}
\newcommand{\sctkzsym@endyokobox}{\hss\egroup}
\definecolor{scsnowmansavedcolor}{gray}{0}
%\newcommand{\sctkzsym@defaultcolor}{black}
\newcommand{\sctkzsym@defaultcolor}{scsnowmansavedcolor}
\newcommand{\sctkzsym@defaultanticolor}{white}
\def\scmp@dim@scale#1#2{#1=#2\relax#1=\sctkzsym@snowman@scale#1\relax}
%
\endinput
%%
%% End of file `sctkzsym-base.sty'.
